# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  unit-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --filter "FullyQualifiedName~.UnitTests." --no-build --verbosity normal
  
  system-tests:

    runs-on: ubuntu-latest
    
    env:
      ASPNETCORE_ENVIRONMENT: Ci
      ASPNETCORE_SPOTIFY__CLIENTID: ${{ secrets.ASPNETCORE_SPOTIFY__CLIENTID }}
      ASPNETCORE_SPOTIFY__CLIENTSECRET: ${{ secrets.ASPNETCORE_SPOTIFY__CLIENTSECRET }}
      
    services:
      db:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: init db
        run: ./.github/workflows/initDb.sh
      - name: Test
        run: dotnet test --filter "FullyQualifiedName~SystemTests." --no-build --verbosity normal
        